// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int        @id @default(autoincrement())
  full_name           String
  cpf                 String     @unique
  email               String     @unique
  password            String
  affliation          String?
  pedagogical_manager String?
  comments            Comments[]
  created_at          DateTime   @default(now())
  updated_at          DateTime?  @updatedAt
  deleted_at          DateTime?

  id_level Int
  level    Level @relation(fields: [id_level], references: [id])

  id_current_phase Int
  current_phase    CurrentPhases @relation(fields: [id_current_phase], references: [id])
}

model Level {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?

  users User[]
}

model Screening {
  id                  Int       @id @default(autoincrement())
  full_name           String
  email               String    @unique
  report              String?
  specific_need       Json
  special_service     Boolean
  physical_disability Json
  visual_impairment   Json
  hearing_impairment  Json
  global_disorder     Json
  other_disabilities  String?
  created_at          DateTime  @default(now())
  updated_at          DateTime? @updatedAt
  deleted_at          DateTime?
}

model Comments {
  id         Int       @id @default(autoincrement())
  comment    String
  id_author  Int
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?

  id_user Int
  user    User @relation(fields: [id_user], references: [id])
}

model CurrentPhases {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  users      User[]
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
}

model Anamnesis {
  id                          Int       @id @default(autoincrement())
  email                       String    @unique
  identification              Json
  family_data                 Json
  family_conditions           Json
  mother_background           Json
  verbal_language_three_years Json
  development                 Json
  school_information          Json
  sexuality                   Json
  student_assessment          Json
  student_development         Json
  created_at                  DateTime  @default(now())
  updated_at                  DateTime? @updatedAt
  deleted_at                  DateTime?
}
